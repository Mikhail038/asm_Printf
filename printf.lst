     1                                  ;24.03.22
     2                                  
     3                                  section .rodata
     4                                  
     5                                  ;=======================================
     6                                  ;%(SYM) MYprintf JUMP TABLE
     7                                  ;=======================================
     8                                  JUMP_TABLE:
     9 00000000 [5500000000000000]                              dq      Case_bin        ;b
    10 00000008 [5100000000000000]                              dq      Case_chr        ;c
    11 00000010 [5900000000000000]                              dq      Case_dec        ;d
    12 00000018 [5F00000000000000]-     times ('i' - 'd' - 1)   dq      Case_err
    12 00000018 <rep 4h>           
    13 00000038 [5900000000000000]                              dq      Case_dec        ;i
    14 00000040 [5F00000000000000]-     times ('o' - 'i' - 1)   dq      Case_err
    14 00000040 <rep 5h>           
    15 00000068 [5B00000000000000]                              dq      Case_oct        ;o
    16 00000070 [5D00000000000000]                              dq      Case_hex        ;p
    17 00000078 [5F00000000000000]-     times ('s' - 'p' - 1)   dq      Case_err
    17 00000078 <rep 2h>           
    18 00000088 [5300000000000000]                              dq      Case_str        ;s
    19 00000090 [5F00000000000000]                              dq      Case_err        ;t - error
    20 00000098 [5700000000000000]                              dq      Case_uns        ;u
    21 000000A0 [5F00000000000000]                              dq      Case_err        ;v - error
    22 000000A8 [5D00000000000000]                              dq      Case_hex        ;x
    23 000000B0 [5F00000000000000]                              dq      Case_err        ;w - error
    24                                  
    25                                  section .data
    26                                  
    27 00000000 7A6120256320776172-     message db "za %c warudo", 0
    27 00000009 75646F00           
    28                                  
    29 0000000D DAFF                    num     dw -38
    30                                  
    31                                  section .text
    32                                  
    33                                  global _start
    34                                  
    35                                  _start:
    36                                          ;push word [num]
    37 00000000 68[00000000]                    push message
    38                                  
    39 00000005 E80C000000                      call MYprintf
    40                                  
    41 0000000A B801000000                      mov eax,    1
    42 0000000F BB00000000                      mov ebx,    0
    43 00000014 CD80                            int 0x80
    44                                  
    45                                  ;=================================================
    46                                  ; Processes line as printf do
    47                                  ;=================================================
    48                                  ; Expects:      Needed data in stack
    49                                  ; Entry:        None
    50                                  ; Exit:         None
    51                                  ; Eliminate:    RSI, RDX, RAX
    52                                  ;=================================================
    53                                  MYprintf:
    54 00000016 5E                                      pop rsi         ;load string
    55                                  
    56 00000017 48FFCE                                  dec rsi         ;compensate
    57                                  .poop:
    58 0000001A 48FFC6                                  inc rsi
    59 0000001D 8A06                                    mov al, byte [rsi]      ;load symbol
    60                                  
    61 0000001F 3C00                                    cmp al, 0               ;check if terminate
    62 00000021 740B                                    je .terminate
    63                                  
    64 00000023 3C25                                    cmp al, '%'             ;check if it is speceficator
    65 00000025 7408                                    je .special
    66                                  
    67 00000027 E835000000                              call PutChar
    68                                  
    69 0000002C EBEC                                    jmp .poop
    70                                  
    71                                  .terminate:
    72 0000002E C3                                      ret
    73                                  
    74                                  
    75                                  .special:
    76 0000002F 48FFC6                                  inc rsi
    77 00000032 8A06                                    mov al, byte [rsi]      ;load next symbol (%X)
    78                                  
    79 00000034 3C25                                    cmp al, '%'
    80 00000036 7507                                    jne .plazdarm
    81                                  
    82 00000038 E824000000                              call PutChar
    83                                  
    84 0000003D EBDB                                    jmp .poop
    85                                  
    86                                  .plazdarm:
    87 0000003F 3C62                                    cmp al, 'b'             ;letter < b
    88 00000041 721C                                    jb Case_err
    89                                  
    90 00000043 3C78                                    cmp al, 'x'             ;letter > x
    91 00000045 7718                                    ja Case_err
    92                                  
    93 00000047 488B04C5[F0FCFFFF]                      mov rax, [((rax - 'b') * 8 + JUMP_TABLE)]
    94 0000004F FFE0                                    jmp rax
    95                                  
    96                                  ;=================================================
    97                                  ; Put char in console
    98                                  ;=================================================
    99                                  ; Expects:      char in stack
   100                                  ; Entry:        None
   101                                  ; Exit:         None
   102                                  ; Eliminate:    RSI, RDX, RAX
   103                                  ;=================================================
   104                                  Case_chr:
   105 00000051 EBC7                                    jmp MYprintf.poop
   106                                  
   107                                  ;=================================================
   108                                  ; Put char in console
   109                                  ;=================================================
   110                                  ; Expects:      char in stack
   111                                  ; Entry:        None
   112                                  ; Exit:         None
   113                                  ; Eliminate:    RSI, RDX, RAX
   114                                  ;=================================================
   115                                  Case_str:
   116 00000053 EBC5                                    jmp MYprintf.poop
   117                                  
   118                                  ;=================================================
   119                                  ; Put char in console
   120                                  ;=================================================
   121                                  ; Expects:      char in stack
   122                                  ; Entry:        None
   123                                  ; Exit:         None
   124                                  ; Eliminate:    RSI, RDX, RAX
   125                                  ;=================================================
   126                                  Case_bin:
   127 00000055 EBC3                                    jmp MYprintf.poop
   128                                  
   129                                  ;=================================================
   130                                  ; Put char in console
   131                                  ;=================================================
   132                                  ; Expects:      char in stack
   133                                  ; Entry:        None
   134                                  ; Exit:         None
   135                                  ; Eliminate:    RSI, RDX, RAX
   136                                  ;=================================================
   137                                  Case_uns:
   138 00000057 EBC1                                    jmp MYprintf.poop
   139                                  
   140                                  ;=================================================
   141                                  ; Put char in console
   142                                  ;=================================================
   143                                  ; Expects:      char in stack
   144                                  ; Entry:        None
   145                                  ; Exit:         None
   146                                  ; Eliminate:    RSI, RDX, RAX
   147                                  ;=================================================
   148                                  Case_dec:
   149 00000059 EBBF                                    jmp MYprintf.poop
   150                                  
   151                                  ;=================================================
   152                                  ; Put char in console
   153                                  ;=================================================
   154                                  ; Expects:      char in stack
   155                                  ; Entry:        None
   156                                  ; Exit:         None
   157                                  ; Eliminate:    RSI, RDX, RAX
   158                                  ;=================================================
   159                                  Case_oct:
   160 0000005B EBBD                                    jmp MYprintf.poop
   161                                  
   162                                  ;=================================================
   163                                  ; Put char in console
   164                                  ;=================================================
   165                                  ; Expects:      char in stack
   166                                  ; Entry:        None
   167                                  ; Exit:         None
   168                                  ; Eliminate:    RSI, RDX, RAX
   169                                  ;=================================================
   170                                  Case_hex:
   171 0000005D EBBB                                    jmp MYprintf.poop
   172                                  
   173                                  ;=================================================
   174                                  ; Put char in console
   175                                  ;=================================================
   176                                  ; Expects:      char in stack
   177                                  ; Entry:        None
   178                                  ; Exit:         None
   179                                  ; Eliminate:    RSI, RDX, RAX
   180                                  ;=================================================
   181                                  Case_err:
   182                                  
   183 0000005F EBB9                                    jmp MYprintf.poop
   184                                  ;=================================================
   185                                  ; Outputs char to a console
   186                                  ;=================================================
   187                                  ; Expects:      None
   188                                  ; Entry:        RSI = Address of string
   189                                  ; Exit:         None
   190                                  ; Eliminate:    RSI, RDX, RAX
   191                                  ;=================================================
   192                                  PutChar:
   193                                                  ; push rcx
   194                                                  ; push r11
   195                                  
   196 00000061 B801000000                              mov rax, 1
   197 00000066 BF01000000                              mov rdi, 1
   198 0000006B BA01000000                              mov rdx, 1
   199                                  
   200 00000070 0F05                                    syscall
   201                                  
   202                                                  ; pop  r11
   203                                                  ; pop  rcx
   204                                  
   205 00000072 C3                                      ret
   206                                  
   207                                  ;=================================================
   208                                  ; Outputs string to a console
   209                                  ;=================================================
   210                                  ; Expects:      None
   211                                  ; Entry:        RSI = Address of string EDX = Number of symbols
   212                                  ; Exit:         None
   213                                  ; Eliminate:    RSI, RDX, RAX
   214                                  ;=================================================
   215                                  PutS:
   216                                                  ; push rcx
   217                                                  ; push r11
   218                                  
   219 00000073 B801000000                              mov rax, 1
   220 00000078 BF01000000                              mov rdi, 1
   221                                  
   222 0000007D 0F05                                    syscall
   223                                  
   224                                                  ; pop  r11
   225                                                  ; pop  rcx
   226                                  
   227 0000007F C3                                      ret
